name: release

on: [push]

jobs:
  build-windows:
    runs-on: windows-latest
    strategy:
      max-parallel: 2
      matrix:
        # python-version: ["3.6","3.7","3.8","3.9","3.10","3.11"]
        python-version: ["3.11"]

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python ${{ matrix.python-version }} x64
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
        architecture: x64

    - name: Upgrade pip
      run: python -m pip install --upgrade pip

    - name: Install build tools
      run: python -m pip install setuptools wheel build twine

    - name: Encrption Code
      shell: cmd
      run: encryption.bat ${{ matrix.python-version }}

    - name: Archive dist artifacts
      uses: actions/upload-artifact@v1
      with:
        name: dist-windows-${{ matrix.python-version }}
        path: dojotest

  upload:
    # needs: [build-linux-cp35, build-linux-cp36, build-linux-cp37, build-linux-cp38, build-macos, build-windows]
    needs: [build-windows]
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.11"
        cache: 'pip' # caching pip dependencies
  
    - name: Upgrade pip
      run: python -m pip install --upgrade pip

    - name: Install build tools
      run: python -m pip install setuptools wheel build twine

    - name: Build the package
      run: python -m build
    
    - name: ls -l
      run: ls -l

    - name: ls -l src/
      run: ls -l src/

    - name: ls -l src/dojotest/
      run: ls -l src/dojotest/
      
    - name: ls -l src/dojotest/base/
      run: ls -l src/dojotest/base/

    - name: Upload with twine
      env:
        TWINE_USERNAME: ${{ secrets.TESTPYPI_USERNAME }}
        TWINE_PASSWORD: ${{ secrets.TESTPYPI_PASSWORD }}
      run: |
        python -m twine upload --repository testpypi dist/*